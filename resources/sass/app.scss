/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://unpkg.com/tailwindcss/dist/base.css
 */
@tailwind base;

/**
 * Remove the default box-shadow for invalid elements to prevent
 * inputs in Livewire components showing with a
 * red border by default in Firefox.
 *
 * See: https://github.com/laravel-frontend-presets/tall/issues/7
 */
input:invalid,
textarea:invalid,
select:invalid {
    box-shadow: none;
}

/**
 * This injects any component classes registered by plugins.
 */
@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 */

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 */
@tailwind utilities;

/* Hero and utility layers moved from resources/css/app.css */
@layer utilities {
    .full-bleed {
        position: relative;
        left: 50%;
        right: 50%;
        margin-left: -50vw;
        margin-right: -50vw;
        width: 100vw;
    }
}

@layer components {
    .hfm-hero {
        --nav-h: 5rem;
        --slope: clamp(8px, 2.4vw, 40px);
        --overlay-from: 248 250 252;
        --overlay-alpha: 0.9;
        --overlay-mid-alpha: 0.7;
        container-type: size;
    }

    @media (prefers-color-scheme: dark) {
        .hfm-hero {
            --overlay-from: 27 46 71;
            --overlay-alpha: 0.7;
            --overlay-mid-alpha: 0.5;
        }
    }

    .hfm-hero__visual {
        clip-path: polygon(0 var(--slope), 100% 0, 100% 100%, 0 100%);
    }

    .hfm-hero__overlay {
        /* Remove fixed-percentage overlay to avoid doubling; top/bottom fades are handled by content layers */
        background: linear-gradient(to top,
            rgba(var(--overlay-from) / 0) 0%,
            rgba(var(--overlay-from) / 0) 100%
        );
        clip-path: polygon(0 var(--slope), 100% 0, 100% 100%, 0 100%);
    }

    @supports not (clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%)) {
        .hfm-hero__overlay {
            clip-path: none;
        }
    }

    .hfm-hero__content {
        color: inherit;
        position: relative;
    }

    .hfm-hero__content::before {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        top: 0; /* Anchor exactly at the top of the content (kicker starts here) */
        bottom: 0; /* Ends at bottom of the content so 100% aligns with content height */
        pointer-events: none;
        z-index: -1; /* Behind the content text but within the content stacking context */
        background: linear-gradient(
                to bottom,
                rgba(var(--overlay-from) / var(--overlay-mid-alpha)) 0%,
                rgba(var(--overlay-from) / var(--overlay-alpha)) 100%
        );
    }

    /* Smoothly blend from transparent (above content) to mid at the content top */
    .hfm-hero__content::after {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        bottom: 100%; /* Sit directly above the content block */
        height: calc(100dvh - var(--nav-h) - 50vh); /* Leave some space fully transparent at the very top */
        pointer-events: none;
        z-index: -1; /* Same stacking as ::before */
        background: linear-gradient(
                to bottom,
                rgba(var(--overlay-from) / 0) 0%,
                rgba(var(--overlay-from) / var(--overlay-mid-alpha)) 100%
        );
    }


    .hfm-hero__badge {
        position: relative;
        z-index: 50;
        top: var(--nav-h);
    }

    .hfm-hero__badgeCircle {
        /* Badge circle diameter scales with the hero container size (container queries)
           Fallback: use viewport height with a higher cap so it can grow on big screens */
        --badge-d: clamp(8rem, 22vh, 24rem);
        width: var(--badge-d);
        height: var(--badge-d);
        transform: rotate(-8deg);
        transform-origin: center;
        /* Ensure content is clipped to the circular shape */
        overflow: hidden;
    }

    /* Prefer container query units when supported for smarter sizing (considers both width and height) */
    @supports (width: 1cqw) {
        .hfm-hero__badgeCircle {
            --badge-d: clamp(8rem, calc(9cqh + 6cqw), 30rem);
        }
    }

    .hfm-hero__badgeCircle > svg,
    .hfm-hero__badgeCircle > img {
        display: block;
        width: 100%;
        height: 100%;
    }

    /* Autoscaling text inside the hero badge circle */
    .hfm-hero__badgeText {
        /* Fill the circle and provide breathing room so text doesn't touch edges */
        box-sizing: border-box;
        width: 100%;
        height: 100%;
        padding: calc(var(--badge-d) * 0.08);

        /* Center content both vertically and horizontally */
        display: grid;
        place-items: center;
        text-align: center;

        /* Typography scaling and legibility */
        /* Scale with the circle diameter, but ensure a minimum for small devices */
        font-size: clamp(0.75rem, calc(var(--badge-d) * 0.14), 1.25rem);
        line-height: 1.15;
        font-weight: 600;
        color: inherit; /* inherit from the circle (e.g., text-white on red bg) */

        /* Wrapping and overflow handling */
        text-wrap: balance;
        overflow-wrap: anywhere;
        word-break: break-word;
        hyphens: auto;
        max-width: 100%;
        max-height: 100%;
    }

    /* Remove default margins on inner elements to prevent bottom overflow */
    .hfm-hero__badgeText > * {
        margin: 0;
    }

    @container (max-height: 36rem) {
        .hfm-hero__badge,
        .hfm-hero__partners {
            display: none !important;
        }
    }

    /* Portrait or square: stack image then content; image flexes to leave room for content */
    @media (max-aspect-ratio: 1/1) {
        .hfm-hero__visual {
            position: relative;
            flex: 1 1 auto;
            height: auto;
            min-height: 24vh;
        }
        .hfm-hero__overlay,
        .hfm-hero__content::before,
        .hfm-hero__content::after {
            display: none;
        }
        .hfm-hero__img {
            height: 100%;
            max-height: none;
            object-fit: cover;
            object-position: center 55%;
            width: 100%;
            display: block;
        }
    }
    @media (min-aspect-ratio: 5/3) {
        .hfm-hero__img {
            object-position: center 50%;
        }
    }

    .partner-logo {
        max-height: clamp(28px, 5vh, 48px);
        width: auto;
        object-fit: contain;
    }

    /* Blur-up image loading for hero */
    .hfm-hero__visual {
        position: relative;
    }

    .hfm-hero__img--placeholder {
        filter: blur(20px);
        transform: scale(1.05);
        transition: opacity 400ms ease, visibility 400ms ease, filter 400ms ease, transform 400ms ease;
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        opacity: 1;
        visibility: visible;
    }

    .hfm-hero__img--full {
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        opacity: 0;
        transition: opacity 400ms ease;
    }

    .hfm-hero.is-loaded .hfm-hero__img--full {
        opacity: 1;
    }

    .hfm-hero.is-loaded .hfm-hero__img--placeholder {
        opacity: 0;
        visibility: hidden;
        filter: blur(0);
        transform: scale(1);
    }
}


/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 */

[x-cloak] {
    display: none;
}

@layer base {
    /* Global CSS variables sourced from Tailwind theme */
    :root {
        --nav-h: 116px;
        --hero-reserve: 8px;
        /* Tailwind theme colors (see tailwind.config.js colors.hfm) */
        --hfm-white: theme('colors.hfm.white');
        --hfm-dark: theme('colors.hfm.dark');
    }
}

@layer components {
    /* Title glow radial backdrop behind the hero heading */
    .hfm-hero__titleRadial {
        height: 140%;
        width: 140%;
        max-width: min(90vw, 80ch);
        border-radius: 9999px; /* rounded-full */
        filter: blur(32px); /* ~ blur-2xl */
        opacity: 0.5;
        /* Title glow uses brand light color with varying alpha */
        background: radial-gradient(
                50% 50% at 50% 50%,
                rgb(from var(--hfm-white) r g b / 0.70) 0%,
                rgb(from var(--hfm-white) r g b / 0.35) 35%,
                rgb(from var(--hfm-white) r g b / 0) 90%
        );
    }

    @media (min-width: 768px) {
        /* md: */
        .hfm-hero__titleRadial {
            opacity: 0.6;
        }
    }

    @media (prefers-color-scheme: dark) {
        .hfm-hero__titleRadial {
            /* Title glow uses brand dark color in dark mode */
            background: radial-gradient(
                    50% 50% at 50% 50%,
                    rgb(from var(--hfm-dark) r g b / 0.45) 0%,
                    rgb(from var(--hfm-dark) r g b / 0.25) 35%,
                    rgb(from var(--hfm-dark) r g b / 0) 70%
            );
        }
    }
}


@layer components {
    /* Short-height (e.g., small mobile landscape) adjustments for hero */
    @container (max-height: 30rem) {
        .hfm-hero__inner {
            /* Reduce vertical padding to keep content within view */
            padding-top: 0.5rem;
            padding-bottom: 0.75rem;
        }

        .hfm-hero__kicker {
            font-size: clamp(0.8rem, 1.6vw, 1rem);
        }

        .hfm-hero__title {
            /* Slightly smaller title to avoid clipping */
            font-size: clamp(1.75rem, 5vw, 3rem);
            line-height: 1.15;
        }

        .hfm-hero__copy {
            margin-top: 0.5rem;
            font-size: clamp(0.9rem, 1.6vw, 1rem);
            line-height: 1.4;
        }
    }

    @container (max-height: 26rem) {
        /* On very short heights, hide CTAs as requested and tighten spacing */
        .hfm-hero__ctas {
            display: none !important;
        }

        .hfm-hero__inner {
            padding-bottom: 0.5rem;
        }

        .hfm-hero__title {
            font-size: clamp(1.5rem, 4.2vw, 2.25rem);
        }
    }
}
