/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://unpkg.com/tailwindcss/dist/base.css
 */
@tailwind base;

/**
 * Remove the default box-shadow for invalid elements to prevent
 * inputs in Livewire components showing with a
 * red border by default in Firefox.
 *
 * See: https://github.com/laravel-frontend-presets/tall/issues/7
 */
input:invalid,
textarea:invalid,
select:invalid {
    box-shadow: none;
}

/**
 * This injects any component classes registered by plugins.
 */
@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 */

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 */
@tailwind utilities;

/* Hero and utility layers moved from resources/css/app.css */
@layer utilities {
    .full-bleed {
        position: relative;
        left: 50%;
        right: 50%;
        margin-left: -50vw;
        margin-right: -50vw;
        width: 100vw;
    }
}

@layer components {
    .hfm-hero {
        --nav-h: 5rem;
        --slope: clamp(8px, 2.4vw, 40px);
        --overlay-from: 248 250 252;
        --overlay-alpha: 0.8;
        --overlay-mid-alpha: 0.5;
        container-type: size;
    }

    @media (prefers-color-scheme: dark) {
        .hfm-hero {
            --overlay-from: 27 46 71;
            --overlay-alpha: 0.88;
            --overlay-mid-alpha: 0.7;
        }
    }

    .hfm-hero__visual {
        clip-path: polygon(0 var(--slope), 100% 0, 100% 100%, 0 100%);
    }

    .hfm-hero__overlay {
        /* Remove fixed-percentage overlay to avoid doubling; top/bottom fades are handled by content layers */
        background: linear-gradient(to top,
            rgba(var(--overlay-from) / 0) 0%,
            rgba(var(--overlay-from) / 0) 100%
        );
        clip-path: polygon(0 var(--slope), 100% 0, 100% 100%, 0 100%);
    }

    @supports not (clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%)) {
        .hfm-hero__overlay {
            clip-path: none;
        }
    }

    .hfm-hero__content {
        color: inherit;
        position: relative;
    }

    .hfm-hero__content::before {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        top: 0; /* Anchor exactly at the top of the content (kicker starts here) */
        bottom: 0; /* Ends at bottom of the content so 100% aligns with content height */
        pointer-events: none;
        z-index: -1; /* Behind the content text but within the content stacking context */
        background: linear-gradient(
                to bottom,
                rgba(var(--overlay-from) / var(--overlay-mid-alpha)) 0%,
                rgba(var(--overlay-from) / var(--overlay-alpha)) 100%
        );
    }

    /* Smoothly blend from transparent (above content) to mid at the content top */
    .hfm-hero__content::after {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        bottom: 100%; /* Sit directly above the content block */
        height: calc(100dvh - var(--nav-h) - 50vh); /* Leave some space fully transparent at the very top */
        pointer-events: none;
        z-index: -1; /* Same stacking as ::before */
        background: linear-gradient(
                to bottom,
                rgba(var(--overlay-from) / 0) 0%,
                rgba(var(--overlay-from) / var(--overlay-mid-alpha)) 100%
        );
    }


    .hfm-hero__badge {
        top: var(--nav-h);
    }

    .hfm-hero__badgeCircle {
        width: clamp(7rem, 14vh, 12rem);
        height: clamp(7rem, 14vh, 12rem);
        transform: rotate(-8deg);
        transform-origin: center;
    }

    @container (max-height: 36rem) {
        .hfm-hero__badge {
            display: none !important;
        }
    }

    /* Portrait or square: stack image then content; limit image height to avoid dominance */
    @media (max-aspect-ratio: 1/1) {
        .hfm-hero__visual {
            position: relative;
            height: min(55vh, 90vw);
        }
        .hfm-hero__overlay,
        .hfm-hero__content::before,
        .hfm-hero__content::after {
            display: none;
        }
    }
    @media (min-aspect-ratio: 5/3) {
        .hfm-hero__img {
            object-position: center 50%;
        }
    }

    .partner-logo {
        max-height: clamp(28px, 5vh, 48px);
        width: auto;
        object-fit: contain;
    }
}

@media (prefers-reduced-motion: reduce) {
    .hfm-hero__badgeCircle {
        transform: none;
    }
}

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 */

[x-cloak] {
    display: none;
}

@layer base {
    /* Global CSS variables sourced from Tailwind theme */
    :root {
        --nav-h: 116px;
        --hero-reserve: 8px;
        /* Tailwind theme colors (see tailwind.config.js colors.hfm) */
        --hfm-light: theme('colors.hfm.light');
        --hfm-dark: theme('colors.hfm.dark');
    }
}

@layer components {
    /* Title glow radial backdrop behind the hero heading */
    .hfm-hero__titleRadial {
        height: 140%;
        width: 140%;
        max-width: min(90vw, 80ch);
        border-radius: 9999px; /* rounded-full */
        filter: blur(32px); /* ~ blur-2xl */
        opacity: 0.5;
        /* Title glow uses brand light color with varying alpha */
        background: radial-gradient(
                50% 50% at 50% 50%,
                rgb(from var(--hfm-light) r g b / 0.70) 0%,
                rgb(from var(--hfm-light) r g b / 0.35) 35%,
                rgb(from var(--hfm-light) r g b / 0) 70%
        );
    }

    @media (min-width: 768px) {
        /* md: */
        .hfm-hero__titleRadial {
            opacity: 0.6;
        }
    }

    @media (prefers-color-scheme: dark) {
        .hfm-hero__titleRadial {
            /* Title glow uses brand dark color in dark mode */
            background: radial-gradient(
                    50% 50% at 50% 50%,
                    rgb(from var(--hfm-dark) r g b / 0.45) 0%,
                    rgb(from var(--hfm-dark) r g b / 0.25) 35%,
                    rgb(from var(--hfm-dark) r g b / 0) 70%
            );
        }
    }
}
